// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way16(in=in, sel=address, a=a16, b=b16, c=c16, d=d16, e=e16, f=f16, g=g16, h=h16);
    DMux8Way(in=load, sel=address, a=la, b=lb, c=lc, d=ld, e=le, f=lf, g=lg, h=lh);
    Register(in=a16, load=la, out=ra);
    Register(in=b16, load=lb, out=rb);
    Register(in=c16, load=lc, out=rc);
    Register(in=d16, load=ld, out=rd);
    Register(in=e16, load=le, out=re);
    Register(in=f16, load=lf, out=rf);
    Register(in=g16, load=lg, out=rg);
    Register(in=h16, load=lh, out=rh);
    Mux8Way16(a=ra, b=rb, c=rc, d=rd, e=re, f=rf, g=rg, h=rh, sel=address, out=out);
}