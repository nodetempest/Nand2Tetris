<!-- Manual parsing exercise -->
<class>
  <keyword>class</keyword>
  <identifier>Main</identifier>
  <symbol>{</symbol>
  <subroutineDec>
    <keyword>function</keyword>
    <keyword>void</keyword>
    <identifier>main</identifier>
    <symbol>(</symbol>
    <!-- insert parameterList event if empty -->
    <parameterList></parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <!-- keep symbol "{" under subroutineBody -->
      <symbol>{</symbol>
      <!-- each var has its own "varDec" block -->
      <varDec>
        <keyword>var</keyword>
        <identifier>Array</identifier>
        <identifier>a</identifier>
        <symbol>;</symbol>
      </varDec>
      <varDec>
        <keyword>var</keyword>
        <keyword>int</keyword>
        <identifier>length</identifier>
        <symbol>;</symbol>
      </varDec>
      <varDec>
        <keyword>var</keyword>
        <keyword>int</keyword>
        <identifier>i</identifier>
        <symbol>,</symbol>
        <identifier>sum</identifier>
        <symbol>;</symbol>
      </varDec>
      <statements>
        <letStatement>
          <keyword>let</keyword>
          <identifier>length</identifier>
          <symbol>=</symbol>
          <!-- don't forget expression -->
          <expression>
            <term>
              <identifier>Keyboard</identifier>
              <symbol>.</symbol>
              <identifier>readInt</identifier>
              <symbol>(</symbol>
              <!-- don't forget expressionList -->
              <expressionList>
                <stringConstant>HOW MANY NUMBERS? </stringConstant>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <!-- keep ; out of expression -->
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>a</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>Array</identifier>
              <symbol>.</symbol>
              <identifier>new</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier>length</identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier>i</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <integerConnstant>0</integerConnstant>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <!-- 
          while (i < length) {
            let a[i] = Keyboard.readInt("ENTER THE NEXT NUMBER: ");
            let i = i + 1;
          }
         -->
        <whileStatement>
          <keyword>while</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier>i</identifier>
            </term>
            <symbol>&lt;</symbol>
            <term>
              <identifier>length</identifier>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <letStatement>
              <keyword>let</keyword>
              <identifier>a</identifier>
              <symbol>[</symbol>
              <expression>
                <term>
                  <identifier>i</identifier>
                </term>
              </expression>
              <symbol>]</symbol>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>Keyboard</identifier>
                  <symbol>.</symbol>
                  <identifier>readInt</identifier>
                  <symbol>(</symbol>
                  <expressionList>
                    <expression>
                      <!-- do not forget term is always inside expression -->
                      <term>
                        <stringConstant>ENTER THE NEXT NUMBER: </stringConstant>
                      </term>
                    </expression>
                  </expressionList>
                  <symbol>)</symbol>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier>i</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier>i</identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <integerConstant>1</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
          </statements>
          <symbol>}</symbol>
        </whileStatement>
        <!-- do Output.printInt(sum / length); -->
        <doStatement>
          <keyword>do</keyword>
          <identifier>Output</identifier>
          <symbol>.</symbol>
          <identifier>printInt</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <identifier>sum</identifier>
              </term>
              <symbol>/</symbol>
              <term>
                <identifier>length</identifier>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <symbol>}</symbol>
</class>